name: kickstart
on: [push]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: install poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python;
          echo "::add-path::$HOME/.poetry/bin/"
      - name: install deps
        run: poetry install -v
      - name: flake8
        run: poetry run flake8
      - name: pytest
        run: poetry run pytest --cov-report=xml:$GITHUB_WORKSPACE/coverage.xml --cov=dploy_kickstart tests/
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  build:
    needs: test
    name: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup python37
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: install poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python;
          echo "::add-path::$HOME/.poetry/bin/"
      - name: install deps
        run: poetry install -v
      - name: build package
        run: poetry build
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.event.base_ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.event.ref, 'refs/tags') && github.event.base_ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TOKEN }}
